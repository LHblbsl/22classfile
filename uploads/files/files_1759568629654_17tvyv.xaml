<Window x:Class="testdemo.SecondWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:testdemo"
        mc:Ignorable="d"
        Title="Second Window" 
        WindowStyle="None"
        AllowsTransparency="True"
        Background="Transparent"
        Top="0"
        Left="0"
        Height="150"
        Width="12000"
        Topmost="True">

    <Window.Resources>
        <!-- 金色渐变画刷 -->
        <LinearGradientBrush x:Key="GoldGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FFFFD700" Offset="0"/>
            <GradientStop Color="#FFFFEC8B" Offset="0.5"/>
            <GradientStop Color="#FFFFD700" Offset="1"/>
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="LightGoldGradientBrush" StartPoint="0,0" EndPoint="1,1">
            <GradientStop Color="#FFF0E68C" Offset="0"/>
            <GradientStop Color="#FFFFF8DC" Offset="0.5"/>
            <GradientStop Color="#FFF0E68C" Offset="1"/>
        </LinearGradientBrush>

        <SolidColorBrush x:Key="GoldBorderBrush" Color="#FFDAA520"/>
        <SolidColorBrush x:Key="GoldTextBrush" Color="#FFFFD700"/>

        <!-- 窗口背景变金动画 -->
        <Storyboard x:Key="WindowToGoldAnimation">
            <ColorAnimation
            Storyboard.TargetName="secondCapsuleBorder"
            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
            To="#FFFFD700"
            Duration="0:0:1"
            AutoReverse="True">
                <ColorAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
        </Storyboard>
       

        <!-- 窗口背景恢复动画 -->
        <Storyboard x:Key="WindowRestoreAnimation">
            <ColorAnimation
        Storyboard.TargetName="secondCapsuleBorder"
        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
        Duration="0:0:1">
                <ColorAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseInOut"/>
                </ColorAnimation.EasingFunction>
            </ColorAnimation>
        </Storyboard>
        <!-- 在Window.Resources中添加关闭动画 -->
        <Storyboard x:Key="CloseWindowAnimation">
            <DoubleAnimation
        Storyboard.TargetName="secondCapsuleBorder"
        Storyboard.TargetProperty="Height"
        To="0"
        Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <CubicEase EasingMode="EaseIn"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>
        <!-- 颜色过渡动画 -->
        <Storyboard x:Key="ColorTransitionStoryboard">
            <ColorAnimation 
                Storyboard.TargetName="secondCapsuleBorder"
                Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                Duration="0:0:0.5" />
        </Storyboard>

        <!-- 弹性放大动画 -->
        <Storyboard x:Key="ExpandAnimation">
            <DoubleAnimation
                Storyboard.TargetName="secondCapsuleBorder"
                Storyboard.TargetProperty="Width"
                From="0" To="1050"
                Duration="0:0:0.8">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetName="secondCapsuleBorder"
                Storyboard.TargetProperty="Height"
                From="0" To="150"
                Duration="0:0:0.8">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- 收缩动画 -->
        <Storyboard x:Key="ShrinkToCircleAnimation">
            <DoubleAnimation
                Storyboard.TargetName="secondCapsuleBorder"
                Storyboard.TargetProperty="Width"
                To="90"
                Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
            <DoubleAnimation
                Storyboard.TargetName="secondCapsuleBorder"
                Storyboard.TargetProperty="Height"
                To="150"
                Duration="0:0:0.5">
                <DoubleAnimation.EasingFunction>
                    <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="3"/>
                </DoubleAnimation.EasingFunction>
            </DoubleAnimation>
        </Storyboard>

        <!-- 图像点击动画 -->
        <!-- 替换原来的 ImageClickAnimation，为每个按钮创建独立动画 -->
        <Storyboard x:Key="ToggleImageClickAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- 复制上面的动画，为其他按钮创建类似的资源 -->
        <Storyboard x:Key="CloseImageClickAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="CountImageClickAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="HistoryImageClickAnimation">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleX">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="RenderTransform.ScaleY">
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0.8">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="2" Springiness="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ElasticEase EasingMode="EaseOut" Oscillations="1" Springiness="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <!-- 在学生框动画部分添加以下资源 -->






        <!-- 在学生框动画部分添加以下资源 -->
        <Storyboard x:Key="StudentsFastDownAnimation">
            <!-- 4个学生框快速下落动画 - 加速通过 -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="6"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StudentsMediumDownAnimation">
            <!-- 中等速度下落动画 -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.6" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="4"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StudentsSlowDownAnimation">
            <!-- 慢速下落动画 -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="2"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StudentsFinalAnimation">
            <!-- 最终停留动画 - 减速停在中间 -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

        <Storyboard x:Key="StudentsVerySlowDownAnimation">
            <!-- 非常慢的下落动画 -->
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent1" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="1.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent2" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="1.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent3" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="1.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="randomStudent4" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[3].(TranslateTransform.Y)">
                <EasingDoubleKeyFrame KeyTime="0:0:0" Value="-150"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="150">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <ExponentialEase EasingMode="EaseIn" Exponent="1.5"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>

    <!-- 主容器 -->
    <Grid>
        <!-- 胶囊型窗口的主要容器 -->
        <Border x:Name="secondCapsuleBorder"
                Height="200"
                Width="1100"
                CornerRadius="45"
                BorderThickness="0"
                Background="#800000FF"
                RenderTransformOrigin="0.5,0.5">

            <Border.RenderTransform>
                <ScaleTransform x:Name="scaleTransform"/>
            </Border.RenderTransform>

            <!-- 胶囊内部布局 -->
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" Name="ControlArea"/>
                    <ColumnDefinition Width="600" Name="DisplayArea"/>
                    <ColumnDefinition Width="300" Name="InfoArea"/>
                </Grid.ColumnDefinitions>

                <!-- 控件区 -->
                <Border Grid.Column="0" Background="Transparent" x:Name="controlArea">
                    <!-- 使用网格布局分为左右两列 -->
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!-- 左列：上为人数，下为隐藏 -->
                        <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image x:Name="countImage" 
                                   Source="人数.png"
                                   Stretch="Uniform"
                                   Width="55"
                                   Height="55"
                                   Margin="-10,0,0,0"
                                   MouseDown="CountImage_MouseDown">
                                <Image.RenderTransform>
                                    <ScaleTransform x:Name="countImageScale" ScaleX="1" ScaleY="1"/>
                                </Image.RenderTransform>
                            </Image>

                            <Image x:Name="toggleImage" 
                                   Source="隐藏.png"
                                   Stretch="Uniform"
                                   Width="55"
                                   Height="55"
                                   Margin="-10,20,0,0"
                                   MouseDown="ToggleImage_MouseDown">
                                <Image.RenderTransform>
                                    <ScaleTransform x:Name="toggleImageScale" ScaleX="1" ScaleY="1"/>
                                </Image.RenderTransform>
                            </Image>
                        </StackPanel>

                        <!-- 右列：上为历史，下为关闭 -->
                        <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                            <Image x:Name="historyImage" 
                                   Source="历史.png"
                                   Stretch="Uniform"
                                   Width="55"
                                   Height="55"
                                   Margin="-50,0,0,0"
                                   MouseDown="HistoryImage_MouseDown">
                                <Image.RenderTransform>
                                    <ScaleTransform x:Name="historyImageScale" ScaleX="1" ScaleY="1"/>
                                </Image.RenderTransform>
                            </Image>

                            <Image x:Name="closeImage" 
                                   Source="关闭.png"
                                   Stretch="Uniform"
                                   Width="55"
                                   Height="55"
                                   Margin="-50,20,0,0"
                                   MouseDown="CloseImage_MouseDown">
                                <Image.RenderTransform>
                                    <ScaleTransform x:Name="closeImageScale" ScaleX="1" ScaleY="1"/>
                                </Image.RenderTransform>
                            </Image>
                        </StackPanel>
                    </Grid>
                </Border>

                <!-- 在显示区部分进行修改 -->
                <Border Grid.Column="1" Background="Transparent" x:Name="displayArea" IsHitTestVisible="False">
                    <Grid>
                        <!-- 调试信息：状态显示 -->
                        <TextBlock x:Name="debugStateTextBlock"
                   Text="[状态]"
                   Foreground="Transparent"
                   FontSize="0.1"
                   FontWeight="Bold"
                   Margin="0,10,0,0"
                   VerticalAlignment="Top"
                   HorizontalAlignment="Center"/>


                        <!-- 4个随机学生框框 -->
                        <!-- 替换原来的 randomStudentsGrid -->
                        <!-- 4个随机学生框框 - 水平排列 -->
                        <Grid x:Name="randomStudentsGrid" Visibility="Collapsed">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <!-- 第一个学生框 -->
                            <Border x:Name="randomStudent1" Grid.Column="0" 
        CornerRadius="40"
        Margin="5"
        BorderThickness="1"
        BorderBrush="White">

                                <!-- 使用Grid作为内容容器，而不是Background -->
                                <Grid>
                                    <!-- 背景图片 -->
                                    <Image x:Name="randomStudent1Bg" 
               Stretch="UniformToFill" 
               Opacity="0.3"/>

                                    <!-- 金色叠加层，默认隐藏 -->
                                    <Rectangle x:Name="randomStudent1GoldOverlay" 
                  Fill="{StaticResource LightGoldGradientBrush}"
                  Opacity="0.4"
                  Visibility="Collapsed"/>

                                    <!-- 前景内容 -->
                                    <StackPanel Orientation="Horizontal" 
                   HorizontalAlignment="Center" 
                   VerticalAlignment="Center">
                                        <Image x:Name="randomStudent1Avatar"
                   Width="80"
                   Height="80"
                   Margin="0,70,-35,0"
                   Stretch="Uniform">
                                            <Image.Clip>
                                                <EllipseGeometry RadiusX="30" RadiusY="30" Center="45,30"/>
                                            </Image.Clip>
                                        </Image>
                                        <TextBlock x:Name="randomStudent1Info" 
                       Foreground="White"
                       FontSize="35"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!-- 第2个学生框 -->
                            <Border x:Name="randomStudent2" Grid.Column="1" 
        CornerRadius="40"
        Margin="5"
        BorderThickness="1"
        BorderBrush="White">

                                <!-- 使用Grid作为内容容器，而不是Background -->
                                <Grid>
                                    <!-- 背景图片 -->
                                    <Image x:Name="randomStudent2Bg" 
               Stretch="UniformToFill" 
               Opacity="0.3"/>

                                    <!-- 金色叠加层，默认隐藏 -->
                                    <Rectangle x:Name="randomStudent2GoldOverlay" 
                  Fill="{StaticResource LightGoldGradientBrush}"
                  Opacity="0.4"
                  Visibility="Collapsed"/>

                                    <!-- 前景内容 -->
                                    <StackPanel Orientation="Horizontal" 
                   HorizontalAlignment="Center" 
                   VerticalAlignment="Center">
                                        <Image x:Name="randomStudent2Avatar"
                   Width="80"
                   Height="80"
                   Margin="0,70,-35,0"
                   Stretch="Uniform">
                                            <Image.Clip>
                                                <EllipseGeometry RadiusX="30" RadiusY="30" Center="45,30"/>
                                            </Image.Clip>
                                        </Image>
                                        <TextBlock x:Name="randomStudent2Info" 
                       Foreground="White"
                       FontSize="35"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!-- 第3个学生框 -->
                            <Border x:Name="randomStudent3" Grid.Column="2" 
        CornerRadius="40"
        Margin="5"
        BorderThickness="1"
        BorderBrush="White">

                                <!-- 使用Grid作为内容容器，而不是Background -->
                                <Grid>
                                    <!-- 背景图片 -->
                                    <Image x:Name="randomStudent3Bg" 
               Stretch="UniformToFill" 
               Opacity="0.3"/>

                                    <!-- 金色叠加层，默认隐藏 -->
                                    <Rectangle x:Name="randomStudent3GoldOverlay" 
                  Fill="{StaticResource LightGoldGradientBrush}"
                  Opacity="0.4"
                  Visibility="Collapsed"/>

                                    <!-- 前景内容 -->
                                    <StackPanel Orientation="Horizontal" 
                   HorizontalAlignment="Center" 
                   VerticalAlignment="Center">
                                        <Image x:Name="randomStudent3Avatar"
                   Width="80"
                   Height="80"
                   Margin="0,70,-35,0"
                   Stretch="Uniform">
                                            <Image.Clip>
                                                <EllipseGeometry RadiusX="30" RadiusY="30" Center="45,30"/>
                                            </Image.Clip>
                                        </Image>
                                        <TextBlock x:Name="randomStudent3Info" 
                       Foreground="White"
                       FontSize="35"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                            <!-- 第4个学生框 -->
                            <Border x:Name="randomStudent4" Grid.Column="3" 
        CornerRadius="40"
        Margin="5"
        BorderThickness="1"
        BorderBrush="White">

                                <!-- 使用Grid作为内容容器，而不是Background -->
                                <Grid>
                                    <!-- 背景图片 -->
                                    <Image x:Name="randomStudent4Bg" 
               Stretch="UniformToFill" 
               Opacity="0.3"/>

                                    <!-- 金色叠加层，默认隐藏 -->
                                    <Rectangle x:Name="randomStudent4GoldOverlay" 
                  Fill="{StaticResource LightGoldGradientBrush}"
                  Opacity="0.4"
                  Visibility="Collapsed"/>

                                    <!-- 前景内容 -->
                                    <StackPanel Orientation="Horizontal" 
                   HorizontalAlignment="Center" 
                   VerticalAlignment="Center">
                                        <Image x:Name="randomStudent4Avatar"
                   Width="80"
                   Height="80"
                   Margin="0,70,-35,0"
                   Stretch="Uniform">
                                            <Image.Clip>
                                                <EllipseGeometry RadiusX="30" RadiusY="30" Center="45,30"/>
                                            </Image.Clip>
                                        </Image>
                                        <TextBlock x:Name="randomStudent4Info" 
                       Foreground="White"
                       FontSize="35"
                       TextAlignment="Center"
                       VerticalAlignment="Center"/>
                                    </StackPanel>
                                </Grid>
                            </Border>
                        </Grid>

                        <!-- 在显示区部分添加最终结果显示 -->
                        <Border x:Name="finalResultBorder" 
        Grid.Column="1" 
        Visibility="Collapsed"
        CornerRadius="40"
        BorderThickness="1"
        BorderBrush="White">
                            <!-- 半透明背景图片 -->
                            <Border.Background>
                                <ImageBrush x:Name="finalResultBackground" 
                    Stretch="UniformToFill" 
                    Opacity="0.37"/>
                            </Border.Background>

                            <!-- 水平排列的内容（头像+文本） -->
                            <StackPanel Orientation="Horizontal" 
                HorizontalAlignment="Center" 
                VerticalAlignment="Center">
                                <!-- 圆形头像 -->
                                <Image x:Name="finalResultAvatar"
               Width="100"
               Height="100"
               Margin="0,0,20,0"
               Stretch="Uniform">
                                    <Image.Clip>
                                        <EllipseGeometry RadiusX="50" RadiusY="50" Center="50,50"/>
                                    </Image.Clip>
                                </Image>

                                <!-- 带黑色描边的文本（修正了 Effect 的嵌套位置） -->
                                <TextBlock x:Name="finalResultText" 
                   Foreground="White"
                   FontSize="60"
                   FontWeight="Bold"
                   TextAlignment="Center"
                   VerticalAlignment="Center">
            <!-- 黑色描边效果（需放在 TextBlock 内部） -->
                                    <TextBlock.Effect>
                                        <DropShadowEffect Color="Black" 
                                 ShadowDepth="0" 
                                            BlurRadius="6"
                                          
                                            Opacity="1"/>

                                    </TextBlock.Effect>  <!-- 描边不透明 -->  <!-- 描边粗细（值越大越粗） --> <!-- 阴影不偏移，模拟描边 -->
                                </TextBlock>
                            </StackPanel>
                        </Border>

                        <!-- 学生信息显示面板（默认隐藏） -->
                        <StackPanel x:Name="studentInfoPanel" 
            Orientation="Horizontal"
            HorizontalAlignment="Center"
            VerticalAlignment="Center"
            Visibility="Collapsed">
                            <!-- 小尺寸圆形头像 -->
                            <Image x:Name="studentAvatarImage"
           Width="40"
           Height="40"
           Margin="0,0,10,0"
           Stretch="Uniform">
                                <Image.Clip>
                                    <!-- 注意：此处圆形裁剪半径应为宽高的一半（40/2=20），原代码 RadiusX/Y=10 会导致显示不全 -->
                                    <EllipseGeometry RadiusX="20" RadiusY="20" Center="20,20"/>
                                </Image.Clip>
                            </Image>

                            <!-- 学生信息文本 -->
                            <TextBlock x:Name="studentInfoTextBlock" 
               Text="等待抽取..."
               Foreground="White"
               FontSize="24"
               FontWeight="Bold"
               TextAlignment="Center"
               VerticalAlignment="Center"/>
                        </StackPanel>
                    </Grid>
                </Border>
                <Border Grid.Column="2" Background="Transparent" x:Name="infoArea" Margin="10">
                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                        <!-- 当前抽数 -->
                        <TextBlock x:Name="drawCountText" 
                               Text="当前抽数: 0"
                               Foreground="White"
                               FontSize="25"
                               FontWeight="Bold"
                               Margin="0,0,0,10"/>

                        <!-- 当前UP -->
                        <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
                            <TextBlock Text="当前UP: "
                                   Foreground="White"
                                   FontSize="25"
                                   FontWeight="Bold"
                                   VerticalAlignment="Center"/>
                            <Border Width="100" Height="55" 
                                CornerRadius="15" 
                                Background="Gold"
                                Margin="5,0,0,0">
                                <TextBlock x:Name="currentUpText"
                                       Text="?"
                                       Foreground="Black"
                                       FontSize="25"
                                       FontWeight="Bold"
                                       HorizontalAlignment="Center"
                                       VerticalAlignment="Center"/>
                            </Border>
                        </StackPanel>

                        <!-- 当前概率 -->
                        <TextBlock x:Name="probabilityText" 
                               Text="当前UP概率: 0%"
                               Foreground="White"
                               FontSize="25"
                               FontWeight="Bold"
                               Margin="0,10,0,0"/>
                    </StackPanel>
                </Border>
            </Grid>
        </Border>
    </Grid>
</Window>